<?php
/**
 * @file
 * Install, update and uninstall functions for the standard installation profile.
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function propeople_install() {
    
  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);

  // Enable user picture support and set the default to a square thumbnail option.
  variable_set('user_pictures', '1');
  variable_set('user_picture_dimensions', '1024x1024');
  variable_set('user_picture_file_size', '800');
  variable_set('user_picture_style', 'thumbnail');

  // Allow visitor account creation with administrative approval.
  variable_set('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL);

  // Enable default permissions for system roles.
  $full_html_format = filter_permission_name($full_html_format);
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content', 'access comments', $full_html_format));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content', 'access comments', 'post comments', 'skip comment approval', $full_html_format));

  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();

  // Update the menu router information.
  menu_rebuild();
  
  // Enable the Origins theme and set it as the default.
  theme_enable(array('adaptivetheme', 'sof_theme'));

  // The Bartik theme is automatically enabled during installation. Disable it.
  db_update('system')
    ->fields(array('status' => 0))
    ->condition('type', 'theme')
    ->condition('name', 'bartik')
    ->execute();

  // Set the default and administration themes.
  variable_set('theme_default', 'sof_theme');

  // Enable the admin theme.
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', 'seven')
    ->execute();
  variable_set('admin_theme', 'seven');
  variable_set('node_admin_theme', '1');
}

/**
 * Implements hook_install_tasks().
 *
 * Important to note - this happens after modules install and locale setup
 */
function propeople_install_tasks() {
  return array(
    'propeople_create_initial_content' => array(
      'display_name' => st('Create initial content'),
    ),
  );
}

/**
 * Create and enable initial content that can't or shouldnt be exported to features,
 * but should be available on istallation.
 */
function propeople_create_initial_content() {
  _propeople_create_menus();
  _propeople_default_follow_link();
}

/**
 * Programatically crate:
 *  - Top navigation menu and links
 *  - Main menu main links only
 */
 function _propeople_create_menus(){
 
    $menus = array(
        array(
            'menu_name'   => 'menu-top-navigation',
            'title'       => 'Top navigation',
            'description' => 'Used for the links in the upper right corner of the page',
        ),
    );
    
   // Look the table first if the data does exist
   foreach ($menus as $menu){
     $exists = db_query("SELECT title FROM {menu_custom} WHERE menu_name=:menu_name", array(':menu_name' => $menu['menu_name']))->fetchField();
     
     // Save the record if the data does not exist
     if (!$exists) {
        menu_save($menu);
     }
   }
   
   //Create header top menu
   $items = array(
      array(          
        'link_title' => t('About us'),
        'link_path'  => '<front>',
        'weight'     => 0,
        'expanded'   => 1,
      ),
      array(          
        'link_title' => t('Contact'),
        'link_path'  => '<front>',
        'weight'     => 1,
        'expanded'   => 1,
      ),
      array(          
        'link_title' => t('Membership'),
        'link_path'  => '<front>',
        'weight'     => 1,
        'expanded'   => 1,
      ),
   );
   populate_menu($items, 'menu-top-navigation');
    
   //Create main menu
   $items = array(
      array(          
        'link_title' => t('School board'),
        'link_path'  => '<front>',
        'weight'     => 0,
        'expanded'   => 1,
        'childs'     => array(
          array(
            'link_title' => t('Column I'),
            'link_path'  => '<front>',
            'weight'     => 0,
            'expanded'   => 1,
          ),
          array(
            'link_title' => t('Column II'),
            'link_path' => '<front>',
            'weight'     => 1,
            'expanded'   => 1,
          ),
          array(
            'link_title' => t('Column III'),
            'link_path'  => '<front>',
            'weight'     => 2,
            'expanded'   => 1,
          ),
        ),
      ),
      array(          
        'link_title' => t('Parents'),
        'link_path'  => '<front>',
        'weight'     => 1,
        'expanded'   => 1,
        'childs'     => array(
          array(
            'link_title' => t('Column I'),
            'link_path'  => '<front>',
            'weight'     => 0,
            'expanded'   => 1,
          ),
          array(
            'link_title' => t('Column II'),
            'link_path' => '<front>',
            'weight'     => 1,
            'expanded'   => 1,
          ),
          array(
            'link_title' => t('Column III'),
            'link_path'  => '<front>',
            'weight'     => 2,
            'expanded'   => 1,
          ),
        ),
      ),
      array(          
        'link_title' => t('News'),
        'link_path'  => '<front>',
        'weight'     => 2,
        'expanded'   => 1,
        'childs'     => array(
          array(
            'link_title' => t('Column I'),
            'link_path'  => '<front>',
            'weight'     => 0,
            'expanded'   => 1,
          ),
          array(
            'link_title' => t('Column II'),
            'link_path' => '<front>',
            'weight'     => 1,
            'expanded'   => 1,
          ),
          array(
            'link_title' => t('Column III'),
            'link_path'  => '<front>',
            'weight'     => 2,
            'expanded'   => 1,
          ),
        ),
      ),
      array(          
        'link_title' => t('Topics'),
        'link_path'  => '<front>',
        'weight'     => 3,
        'expanded'   => 1,
        'childs'     => array(
          array(
            'link_title' => t('Column I'),
            'link_path'  => '<front>',
            'weight'     => 0,
            'expanded'   => 1,
          ),
          array(
            'link_title' => t('Column II'),
            'link_path' => '<front>',
            'weight'     => 1,
            'expanded'   => 1,
          ),
          array(
            'link_title' => t('Column III'),
            'link_path'  => '<front>',
            'weight'     => 2,
            'expanded'   => 1,
          ),
        ),
      ),
      array(          
        'link_title' => t('Search'),
        'link_path'  => '<front>',
        'weight'     => 4,
        'expanded'   => 1,
      ),
   );
   populate_menu($items, 'main-menu');
   
 }

/**
 * Programatically create follow links
 *  - Remove the rss follow link (added by default on module install)
 *  - Add the new facebook link
 *  - Add the new twitter link
 * 
 *  @see https://www.drupal.org/project/follow
 */
 function _propeople_default_follow_link(){
    
  // Add a default facebook and twitter links to the page
  $values = array(
    array(
        'name' => 'facebook',
        'path' => 'https://www.facebook.com/SkoleOgForaeldre',
        'options' => 'a:2:{s:5:"query";a:0:{}s:8:"fragment";s:0:"";}',
        'uid' => 0,
        'weight' => -10,
    ),
    array(
        'name' => 'twitter',
        'path' => 'https://twitter.com/SkoleForaeldre',
        'options' => 'a:2:{s:5:"query";a:0:{}s:8:"fragment";s:0:"";}',
        'uid' => 0,
        'weight' => -9,
    ),
   );
   
  $query = db_insert('follow_links')->fields(array('name', 'path', 'options','uid','weight'));
  foreach ($values as $record) {
    $query->values($record);
  }
  $query->execute();
    
  //Remove default RSS link crated on module install
  db_delete('follow_links')
    ->condition('lid', 1)
    ->execute();
    
 }
 
 
 /**
  * Helper function for menu create
  * 
  * @param $links array
  *     Contains all links data used menu_link_save()
  * @param $menu_name string
  *     Menu machine name
  * @param $plid int (optional)
  *     Menu link parent id
  * 
  */
 function populate_menu($links, $menu_name, $plid = 0) {
  foreach ($links as $link) {
    $ls = array(
      'menu_name'  => $menu_name,
      'link_title' => $link['link_title'],
      'link_path'  => $link['link_path'],
      'plid'       => $plid,
      'weight'     => $link['weight'],
      'expanded'   => $link['expanded'],
    );
    
    // Look the table first if the data does exist
    $exists = db_query("SELECT mlid from {menu_links} WHERE link_title=:link_title AND link_path=:link_path", array(':link_title' =>  $ls['link_title'], ':link_path' => $ls['link_path']))->fetchField();
    
    // Save the record if the data does not exist
    if (!$exists) {  
      $newpid = menu_link_save($ls);
      if (!empty($link['childs'])) {
         populate_menu($link['childs'], $menu_name, $newpid);
      };
    }
    
  }
}
 
