<?php
/**
 * Implements hook_permission().
 */
function sof_pdf_generator_permission() {
  return array(
    'sof generate publication pdf' => array(
      'title' => t('SOF generate publication pdf '),
      'description' => t('Allow generating pdf from preselected nodes'),
    ),
    'sof generate single pdf' => array(
      'title' => t('SOF generate single pdf '),
      'description' => t('Allow generating pdf from single node (article or news)'),
    ),
  );
}

/**
 * Implements hook_menu().
 */

function sof_pdf_generator_menu() {
 
  $items = array();

  // Publication download link.
  $items['sof-pdf-generate/%'] = array(
    'title' => 'Publicataion Pdf Generator',
    'description' => 'Administer Publicataion Pdf Generator',
    'access arguments' => array('sof generate publication pdf'),
    'page callback' => 'sof_generate_pdf_from_nodes',
    'page arguments' => array(1),
    'type' => MENU_CALLBACK,
  );
  
  // Article/News download link
  $items['sof-pdf-single/%'] = array(
    'title' => 'Article/News Pdf Generator',
    'description' => 'Administer Publicataion Pdf Generator',
    'access arguments' => array('sof generate single pdf'),
    'page callback' => 'sof_generate_pdf_from_node',
    'page arguments' => array(1),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * SOF pdf generator callback for publication
 * 
 * @param $nid integer
 *  node id from wich content the pdf will be generated
 * 
 */
 function sof_generate_pdf_from_nodes( $nid ){
     
     if(!isset($nid))
        return;
     
     if( $node_obj = node_load($nid) ){
         
         if($node_obj->type == 'publication'){
                 
             //Get node rendering array
             $node_view = node_view($node_obj, 'default');
             
             switch($node_view['field_publication_file_type']['#items'][0]['value']) {
                 
                 //Trigger file download    
                 case 1:
                     if($node_view['field_file']) {
                        
                        $file_uri  = $node_view['field_file']['#items'][0]['uri'];
                        $file_mime = $node_view['field_file']['#items'][0]['filemime'];
                        $file_name = $node_view['field_file']['#items'][0]['filename'];
                        $file_size = $node_view['field_file']['#items'][0]['filesize'];
                        $http_headers = array(
                              'Content-Type' => $file_mime,
                              'Content-Disposition' => 'attachment; filename="' . $file_name . '"',
                              'Content-Length' => $file_size,
                        );
                        
                        file_transfer($file_uri, $http_headers);

                     }else
                        return drupal_access_denied();
                     
                     break;
                 
                 //Generate pdf file from preselected nodes
                 case 2: 
                     sof_pdf_generator_publication_pdf($node_view);
                     break;
             }
         }
             
     }
     
}


/**
 * SOF pdf generator callback for articles and news
 * 
 * @param $nid integer
 *  node id from wich content the pdf will be generated
 * 
 */
 function sof_generate_pdf_from_node( $nid ){
     
     if(!isset($nid))
        return;
     
     if( $node_obj = node_load($nid) ){
         
         if(in_array($node_obj->type, array('article','news'))){
             
             //Add Template css
             drupal_add_css(drupal_get_path('module', 'sof_pdf_generator') . '/css/sof_pdf_generator.css');
                
             //Add Columnizer library
             libraries_load('columnizer');
             
             //Add Columnizer js
             drupal_add_js(drupal_get_path('module', 'sof_pdf_generator') . '/js/sof_pdf_generator.js', 'file');
             
             //Main template variables
             $sof_print_vars['css'] = drupal_get_css();
             $sof_print_vars['js']  = drupal_get_js();
             $sof_print_vars['page'] = "";
     
             //Setup print content
             $node_content = array();
        
             //Add image on top 
             if($node_obj->field_image_slider){            
                $node_content[]['image'] = theme('sof_pdf_top_image', array(
                    'image' => field_view_field('node', $node_obj, 'field_image_slider', 'default'),
                ));
             }
            
             //Add the rest of the fields
             $node_content[]['title']  = $node_obj->title;
             $node_content[]['teaser'] = field_view_field('node', $node_obj, 'field_teaser', 'default');
             $node_content[]['body']   = field_view_field('node', $node_obj, 'body', 'default');
             
             $sof_print_vars['page'] = theme('sof_pdf_generator_pages', array(
                'content' => $node_content,
             ));  
             $content_page = theme('sof_pdf_generator_main', $sof_print_vars);
             
            //Send html to print
             if (($library = libraries_load('phpwkhtmltopdf')) && !empty($library['loaded'])) {
               
               //Set global options for the pdf  
               $pdf = new WkHtmlToPdf(array(
                    'no-outline', 
                    'disable-smart-shrinking',
                    'javascript-delay' => 1000,
                    
                    //Footer and offset options
                    'footer-center' => '[page]',
               ));
                
               //Add a HTML file, a HTML string or a page from a URL
               $pdf->addPage($content_page);
               
               //Create fielname from url alias
               $url_alias = drupal_lookup_path('alias', 'node/'.$node_obj->nid);
               $filename = end(explode('/',$url_alias)) . '.pdf';
               
               //Send to client as file download
               $pdf->send($filename);             
             }
            
         }
             
     }
     
}
/**
 * Implements hook_ctools_plugin_directory().
 */
 function sof_pdf_generator_ctools_plugin_directory($owner, $plugin_type) {

     if ($owner == 'linkit' && !empty($plugin_type)) {
        return "plugins/" . $plugin_type;
     }
    
 }

/**
 * Implements hook_theme().
 */
function sof_pdf_generator_theme($existing, $type, $theme, $path) {
  return array(
    'sof_pdf_generator_main' => array(
      'variables' => array(
        'css'  => NULL,
        'js'   => NULL,
        'page' => NULL,
      ),
      'template' => 'theme/sof_pdf_generator_main',
    ),
    'sof_pdf_generator_cover' => array(
      'variables' => array(
        'image'  => NULL,
        'title'  => NULL,
        'teaser' => NULL,
        'logo'   => NULL,
        'color'  => NULL,
      ),
      'template' => 'theme/sof_pdf_generator_cover',
    ),
    'sof_pdf_generator_pages' => array(
      'variables' => array(
        'content' => NULL,
      ),
      'template' => 'theme/sof_pdf_generator_pages',
    ),
    'sof_pdf_top_image' => array(
      'variables' => array(
        'image' => NULL,
        'title' => NULL,
      ),
      'template' => 'theme/sof_pdf_top_image',
    )
  );
}

/**
 * Implements hook_field_extra_fields().
 */
function sof_pdf_generator_field_extra_fields() {
  
  //Additiona field for download links on article, news and publication
  foreach(array('news', 'article', 'publication') as $node_type) {

    $extra['node'][$node_type]['display']['download_as_pdf'] = array(
        'label' => t('Download pdf'),
        'description' => t('Provides link for pdf download'),
        'weight' => 10,
        'visible' => FALSE,
    );

  }
  
  return $extra;

}

/**
 * Implements hook_node_view().
 */
function sof_pdf_generator_node_view($node, $view_mode, $langcode) {
  
  $extrafields = field_extra_fields_get_display('node', $node->type, $view_mode);
  $extrafield_name = 'download_as_pdf';
  
  //Attach download as pdf link to articles, news and publication
  if (isset($extrafields[$extrafield_name])
      && isset($extrafields[$extrafield_name]['visible'])
      && $extrafields[$extrafield_name]['visible']) {
      
    $node->content['download_as_pdf'] = array(
      '#markup' => l(t('Download as pdf'), ($node->type == 'publication' ? 'sof-pdf-generate/' : 'sof-pdf-single/')  . $node->nid, array(
        'attributes' => array(
            'class' => array('download-as-pdf'),
        ),
      )),
    );
    
  }
}

/**
 * Helper function for generating pdf files of the publication
 * 
 * @param $node_view array
 *  Received from node_view().
 * 
 * @todo limit the flexlider field
 */
 function sof_pdf_generator_publication_pdf($node_view){
     
     //Add Template css
     drupal_add_css(drupal_get_path('module', 'sof_pdf_generator') . '/css/sof_pdf_generator.css');
    
     //Add Columnizer library
     libraries_load('columnizer');
     
     //Add Columnizer js
     drupal_add_js(drupal_get_path('module', 'sof_pdf_generator') . '/js/sof_pdf_generator.js', 'file');
     
     //Main template variables
     $sof_print_vars['css'] = drupal_get_css();
     $sof_print_vars['js']  = drupal_get_js();
     $sof_print_vars['page'] = "";

     //Cover page setup
     $sof_print_vars['page'] = theme('sof_pdf_generator_cover', array(
        'title'  => $node_view['field_pdf_title']['#items'][0]['value'],
        'teaser' => $node_view['field_pdf_description']['#items'][0]['value'],
        'logo'   => theme_get_setting('logo'),
        'color'  => $node_view['field_pdf_cover_color']['#items'][0]['rgb'],
     ));
     $cover_page  = theme('sof_pdf_generator_main', $sof_print_vars);
     
     //Content page setup
     foreach($node_view['field_pdf_content']['#items'] as $key=>$item){
            
        $node_content[$key] = array();
        
        //Add image on top 
        if($item['entity']->field_image_slider){            
            $node_content[$key]['image'] = theme('sof_pdf_top_image', array(
                'image' => field_view_field('node', $item['entity'], 'field_image_slider', 'default'),
            ));
        }
        
        //Add the rest of the fields
        $node_content[$key]['title']  = $item['entity']->title;
        $node_content[$key]['teaser'] = field_view_field('node', $item['entity'], 'field_teaser', 'default');
        $node_content[$key]['body']   = field_view_field('node', $item['entity'], 'body', 'default');
    
     }
     $sof_print_vars['page'] = theme('sof_pdf_generator_pages', array(
        'content' => $node_content,
     ));  
     $content_page = theme('sof_pdf_generator_main', $sof_print_vars);
     
     
     //Send html to print
     if (($library = libraries_load('phpwkhtmltopdf')) && !empty($library['loaded'])) {
       
       //Set global options for the pdf  
       $pdf = new WkHtmlToPdf(array(
            'no-outline', 
            'disable-smart-shrinking',
            'javascript-delay' => 1000,
            
            //Footer and offset options
            'page-offset'   => -1,
            'footer-center' => '[page]',
       ));
       
       //Add a cover
       $pdf->addCover($cover_page);
       
       //Add table of contents
       $pdf->addToc(array(
        'disable-dotted-lines',
        'toc-text-size-shrink' => 0.95,
        'toc-header-text' => t('Content'),
       ));
        
       //Add a HTML file, a HTML string or a page from a URL
       $pdf->addPage($content_page);
       
       //Create fielname from url alias
       $url_alias = drupal_lookup_path('alias', 'node/'.$node_view['#node']->nid);
       $filename = end(explode('/',$url_alias)) . '.pdf';
       
       //Send to client as file download
       $pdf->send($filename);
       
       
       /**
        * HELPERS
        * 
        * # Add page & cover posibilities
        * $pdf->addPage('/home/joe/page.html');
        * $pdf->addPage($html_var);
        * $pdf->addPage('http://google.com');
        *
        * # File handle posibilities
        * $pdf->saveAs('/tmp/new.pdf'); - Save the PDF
        * $pdf->send(); - Send to client for inline display
        * $pdf->send('test.pdf'); - Send to client as file download
        */
     
     }
    
     //Testing purposes
     //print $cover_page;
     //print $content_page;
 }
