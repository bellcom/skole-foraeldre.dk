<?php

/**
 * Implements hook_requirements().
 */
function phpwkhtmltopdf_requirements($phase) {
  // We only care to run our requirements validation on the "runtime" phase.
  switch ($phase) {
    case 'runtime':
      $results = array();

      module_load_include('module', 'phpwkhtmltopdf');
      // Get our own libraries to loop over and verify.
      $libraries = phpwkhtmltopdf_libraries_info();
      foreach($libraries as $name => $details) {
        $lib_results = phpwkhtmltopdf_requirements_validate_library($name, 'phpwkhtmltopdf_failed_generic');
        $results = array_merge($results, $lib_results);
      }
      // Return the validation results to Drupal.
      return $results;
      break;
  }
}


/**
 * Verifies a library exists and returns TRUE if successful, calls the $failed_callback and returns its value if
 * the library is not found.
 *
 * @param string $library_name The library name to verify.
 * @param callback $failed_callback Callback to execute if the library doesn't exist or there was error getting its details.
 * <code>
 * function($library_name = "", $library_details = array()) {
 * ...
 * }
 * </code>
 * @return array Returns an array suitable for hook_requirements() containing REQUIREMENT_OK if the library exists, else
 * returns the result fo the $failed_callback function.
 */
function phpwkhtmltopdf_requirements_validate_library($library_name, $failed_callback) {
  $lib = libraries_detect($library_name);
  if (!$lib || !empty($lib['error'])) {
    return $failed_callback($library_name, $lib);
  }
  return array(
    $library_name => array(
      'title' => $lib['name'],
      'value' => $lib['version'],
      'severity' => REQUIREMENT_OK,
      'description' => '',
    ),
  );
}

/**
 * Creates the info to be returned during hook_requirements().
 *
 * @param string $lib_name The library machine name
 * @param null $lib The library details from libraries_detect().
 * @return array The results to be returned to hook_requirements.
 */
function phpwkhtmltopdf_failed_generic($lib_name, $lib = NULL) {
  $t = get_t();

  module_load_include('module', 'phpwkhtmltopdf');
  // Get our defined details about the libraries to construct a helpful message.
  $libraries = phpwkhtmltopdf_libraries_info();

  // Default message is for a missing library.
  $problem = 'Missing';
  $message = $t('The !name library was not found. Please download and install the library into your sites libraries folder from: !download-url',
    array(
      '!name' => $libraries[$lib_name]['name'],
      '!download-url' => $libraries[$lib_name]['download url'],
    )
  );

  // Overwrite libraries default message for a missing library with our own.
  if (!$lib || (isset($lib['error']) && $lib['error'] === 'not found')) {
    // Reset the $lib with an array to hold our custom values.
    $lib = array();
    $lib['error'] = $problem;
    $lib['error message'] = $message;
  }

  $results = array(
    $lib_name => array(
      'title' => $libraries[$lib_name]['name'],
      'value' => $lib['error'],
      'severity' => REQUIREMENT_ERROR,
      'description' => $lib['error message'],
    ),
  );
  return $results;
}
